diff -crN alps_20180220~r7849.orig/config/FindBoostForALPS.cmake alps_20180220~r7849/config/FindBoostForALPS.cmake
*** alps_20180220~r7849.orig/config/FindBoostForALPS.cmake	2019-08-02 15:16:51.000000000 +0900
--- alps_20180220~r7849/config/FindBoostForALPS.cmake	2019-08-02 15:16:37.000000000 +0900
***************
*** 21,40 ****
    # Debug flag for FindBoost.cmake
    #  set(Boost_DEBUG TRUE)
  
!   message(STATUS "Looking for precompiled Boost libraries (version >= 1.52)")
  
    # We do not require Boost.MPI, therefore check whether Boost.MPI exists
    # before actual find_package for Boost.
    # - Ubuntu 10.10 does not have Boost.MPI package.
    set(MPI)
!   find_package(Boost 1.52.0 COMPONENTS mpi)
    if (Boost_FOUND)
      set(MPI mpi)
    endif (Boost_FOUND)
    # Linking to Boost.test Unit Test Framework is optional
    set(UTF)
    if (ALPS_LINK_BOOST_TEST)
!     find_package(Boost 1.52.0 COMPONENTS unit_test_framework)
      if (Boost_FOUND)
        set(UTF unit_test_framework)
        # Unset ALPS_INSTALL_BOOST_TEST
--- 21,40 ----
    # Debug flag for FindBoost.cmake
    #  set(Boost_DEBUG TRUE)
  
!   message(STATUS "Looking for precompiled Boost libraries (version >= 1.49)")
  
    # We do not require Boost.MPI, therefore check whether Boost.MPI exists
    # before actual find_package for Boost.
    # - Ubuntu 10.10 does not have Boost.MPI package.
    set(MPI)
!   find_package(Boost 1.49.0 COMPONENTS mpi)
    if (Boost_FOUND)
      set(MPI mpi)
    endif (Boost_FOUND)
    # Linking to Boost.test Unit Test Framework is optional
    set(UTF)
    if (ALPS_LINK_BOOST_TEST)
!     find_package(Boost 1.49.0 COMPONENTS unit_test_framework)
      if (Boost_FOUND)
        set(UTF unit_test_framework)
        # Unset ALPS_INSTALL_BOOST_TEST
***************
*** 54,76 ****
      set(TIMER timer)
    endif (Boost_FOUND)
    set(NUMPY)
    set(ALPS_HAVE_BOOST_NUMPY OFF)
    find_package(Boost 1.48.0 COMPONENTS numpy)
    if (Boost_FOUND)
      set(NUMPY numpy)
      set(ALPS_HAVE_BOOST_NUMPY ON)
    endif (Boost_FOUND)
    # The final library finding for precompiled Boost.
    if(ALPS_BUILD_PYTHON)
!     find_package(Boost 1.52.0 COMPONENTS chrono date_time filesystem iostreams program_options python regex system serialization thread ${MPI} ${UTF} ${TIMER} ${NUMPY})
    else(ALPS_BUILD_PYTHON)
!     find_package(Boost 1.52.0 COMPONENTS chrono date_time filesystem iostreams program_options regex system serialization thread ${MPI} ${UTF} ${TIMER} ${NUMPY})
    endif(ALPS_BUILD_PYTHON)
    # Unset local variable
    unset(MPI)
    unset(UTF)
    unset(TIMER)
    unset(NUMPY)
  
  endif(NOT Boost_ROOT_DIR)
  
--- 54,85 ----
      set(TIMER timer)
    endif (Boost_FOUND)
    set(NUMPY)
+   set(PYTHON)
    set(ALPS_HAVE_BOOST_NUMPY OFF)
    find_package(Boost 1.48.0 COMPONENTS numpy)
    if (Boost_FOUND)
      set(NUMPY numpy)
+     set(PYTHON python)
+     set(ALPS_HAVE_BOOST_NUMPY ON)
+   endif (Boost_FOUND)
+   find_package(Boost 1.48.0 COMPONENTS numpy27)
+   if (Boost_FOUND)
+     set(NUMPY numpy27)
+     set(PYTHON python27)
      set(ALPS_HAVE_BOOST_NUMPY ON)
    endif (Boost_FOUND)
    # The final library finding for precompiled Boost.
    if(ALPS_BUILD_PYTHON)
!     find_package(Boost 1.49.0 COMPONENTS chrono date_time filesystem iostreams program_options ${PYTHON} regex system serialization thread ${MPI} ${UTF} ${TIMER} ${NUMPY})
    else(ALPS_BUILD_PYTHON)
!     find_package(Boost 1.49.0 COMPONENTS chrono date_time filesystem iostreams program_options regex system serialization thread ${MPI} ${UTF} ${TIMER})
    endif(ALPS_BUILD_PYTHON)
    # Unset local variable
    unset(MPI)
    unset(UTF)
    unset(TIMER)
    unset(NUMPY)
+   unset(PYTHON)
  
  endif(NOT Boost_ROOT_DIR)
  
diff -crN alps_20180220~r7849.orig/src/alps/alea/histogram.h alps_20180220~r7849/src/alps/alea/histogram.h
*** alps_20180220~r7849.orig/src/alps/alea/histogram.h	2013-09-06 00:05:22.000000000 +0900
--- alps_20180220~r7849/src/alps/alea/histogram.h	2019-08-02 15:15:05.000000000 +0900
***************
*** 85,93 ****
    // forward a few things from container
  
    const_iterator begin() const { return histogram_.begin();}
!   const_iterator rbegin() const { return histogram_.rbegin();}
    const_iterator end() const { return histogram_.end();}
!   const_iterator rend() const { return histogram_.rend();}
    size_type size() const { return histogram_.size();}
    value_type operator[](size_type i) const { return histogram_[i];}
    value_type at(size_type i) const { return histogram_.at(i);}
--- 85,93 ----
    // forward a few things from container
  
    const_iterator begin() const { return histogram_.begin();}
!   const_reverse_iterator rbegin() const { return histogram_.rbegin();}
    const_iterator end() const { return histogram_.end();}
!   const_reverse_iterator rend() const { return histogram_.rend();}
    size_type size() const { return histogram_.size();}
    value_type operator[](size_type i) const { return histogram_[i];}
    value_type at(size_type i) const { return histogram_.at(i);}
diff -crN alps_20180220~r7849.orig/src/alps/hdf5/archive.cpp alps_20180220~r7849/src/alps/hdf5/archive.cpp
*** alps_20180220~r7849.orig/src/alps/hdf5/archive.cpp	2019-08-02 15:16:53.000000000 +0900
--- alps_20180220~r7849/src/alps/hdf5/archive.cpp	2019-08-02 15:16:37.000000000 +0900
***************
*** 33,38 ****
--- 33,39 ----
  
  #include <boost/scoped_array.hpp>
  #include <boost/filesystem/operations.hpp>
+ #include <boost/noncopyable.hpp>
  
  #include <hdf5.h>
  
